{"version":3,"sources":["components/Navbar.js","components/Detalhes.js","components/ComicCard.js","components/Footer.js","components/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","background","backgroundColor","pos","justifyContent","title","fontSize","Navbar","classes","AppBar","position","color","className","Toolbar","Typography","variant","container","textAlign","closeButton","right","top","padding","boxSizing","dados","display","flexDirection","paddingLeft","paddingRight","bold","fontWeight","text","Detalhes","open","handleClose","description","year","issue","series","creator","Dialog","onClose","DialogTitle","IconButton","onClick","edge","DialogContent","dividers","DialogContentText","margin","flex","alignItems","boxShadow","image","maxWidth","maxHeight","width","height","textContent","creatorStyle","marginTop","ComicCard","cover","useState","setOpen","handleClickOpen","src","alt","Button","button","assinatura","Footer","pages","flexWrap","Pagination","comicsPerPage","totalComics","paginate","pageNumbers","i","Math","ceil","push","ButtonGroup","map","number","key","theme","createMuiTheme","palette","primary","500","grid","pagesContainerTop","pagesContainerBottom","marginBottom","searchContainer","textField","ts","Date","getTime","apiKey","hash","md5","url","config","App","comics","setComics","loading","setLoading","currentPage","setCurrentPage","query","setQuery","useEffect","a","axios","get","res","data","results","getComics","pageNumber","getWriters","creators","writers","forEach","role","length","name","MuiThemeProvider","TextField","id","label","onChange","val","target","value","InputProps","endAdornment","InputAdornment","pageBtnsTop","Grid","CircularProgress","style","indexOfLastComic","indexOfFirstComic","currentComics","slice","item","characters","items","character","toLowerCase","filteredComics","comic","xs","md","thumbnail","path","extension","dates","date","split","splice","join","issueNumber","pageBtnsBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c55fcd2.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n\tbackground: {\n\t\tbackgroundColor: '#EB1C24',\n\t},\n\tpos: {\n\t\tjustifyContent: 'center',\n\t},\n\ttitle: {\n\t\tfontSize: 30,\n\t},\n})\n\nconst Navbar = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar position='static' color='primary' className={classes.background}>\n\t\t\t<Toolbar className={classes.pos}>\n\t\t\t\t<Typography variant='h6' className={classes.title}>\n\t\t\t\t\tLista de Quadrinhos\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nexport default Navbar\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\ttextAlign: 'center',\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\tright: 20,\n\t\ttop: 10,\n\t\tpadding: 10,\n\t\tboxSizing: 'border-box',\n\t},\n\tdados: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t},\n\tpadding: {\n\t\tpaddingLeft: 20,\n\t\tpaddingRight: 20,\n\t},\n\tbold: {\n\t\tcolor: 'black',\n\t\tfontWeight: 'bold',\n\t},\n\ttext: {\n\t\tcolor: '#333',\n\t\tfontSize: 18,\n\t},\n})\n\nconst Detalhes = ({ open, handleClose, title, description, year, issue, series, creator }) => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<div>\n\t\t\t<Dialog className={classes.container} open={open} onClose={handleClose}>\n\t\t\t\t<DialogTitle>\n\t\t\t\t\t{title}\n\t\t\t\t\t<IconButton className={classes.closeButton} onClick={handleClose} edge='end'>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent className={classes.dados} dividers>\n\t\t\t\t\t<DialogContentText className={classes.padding}>\n\t\t\t\t\t\t<span className={classes.bold}>Criado por: </span>\n\t\t\t\t\t\t{creator}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t<DialogContentText className={classes.padding}>\n\t\t\t\t\t\t<span className={classes.bold}>Série: </span>\n\t\t\t\t\t\t{series}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t<DialogContentText className={classes.padding}>\n\t\t\t\t\t\t<span className={classes.bold}>Ano: </span>\n\t\t\t\t\t\t{year}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t<DialogContentText className={classes.padding}>\n\t\t\t\t\t\t<span className={classes.bold}>Edição: </span>\n\t\t\t\t\t\t{issue}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText className={classes.text}>\n\t\t\t\t\t\t{description || 'Quadrinho sem descrição'}\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t</div>\n\t)\n}\n\nexport default Detalhes\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Detalhes from './Detalhes'\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tmargin: 10,\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tboxShadow:\n\t\t\t'0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14)',\n\t},\n\n\timage: {\n\t\tdisplay: 'block',\n\t\tmaxWidth: 300,\n\t\tmaxHeight: 250,\n\t\twidth: 'auto',\n\t\theight: 'auto',\n\t},\n\n\ttextContent: {\n\t\twidth: '100%',\n\t\tpadding: 20,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\ttextAlign: 'justify',\n\t},\n\n\tcreatorStyle: {\n\t\ttextAlign: 'center',\n\t\tmarginTop: -10,\n\t\tfontSize: 20,\n\t},\n})\n\nconst ComicCard = ({ title, creator, cover, description, year, issue, series }) => {\n\tconst classes = useStyles()\n\tconst [open, setOpen] = useState(false)\n\tconst handleClickOpen = () => setOpen(true)\n\tconst handleClose = () => setOpen(false)\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<img src={cover} className={classes.image} alt='cover' />\n\t\t\t<div className={classes.textContent}>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<p className={classes.creatorStyle}>{creator}</p>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tclassName={classes.button}>\n\t\t\t\t\tDetalhes\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Detalhes\n\t\t\t\topen={open}\n\t\t\t\thandleClose={handleClose}\n\t\t\t\thandleClickOpen={handleClickOpen}\n\t\t\t\ttitle={title}\n\t\t\t\tdescription={description}\n\t\t\t\tcreator={creator}\n\t\t\t\tyear={year}\n\t\t\t\tseries={series}\n\t\t\t\tissue={issue}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default ComicCard\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tbackgroundColor: '#333',\n\t\twidth: '100%',\n\t\theight: 50,\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tassinatura: {\n\t\tcolor: 'white',\n\t},\n})\n\nconst Footer = () => {\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<p className={classes.assinatura}>Carlos Habib - Desafio 2B Educação</p>\n\t\t</div>\n\t)\n}\n\nexport default Footer\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles({\n\tpages: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t},\n})\n\nconst Pagination = ({ comicsPerPage, totalComics, paginate }) => {\n\tconst classes = useStyles()\n\tconst pageNumbers = []\n\n\t//popular o vetor com a quantidade certa de botões para os quadrinhos\n\tfor (let i = 1; i <= Math.ceil(totalComics / comicsPerPage); i++) {\n\t\tpageNumbers.push(i)\n\t}\n\n\treturn (\n\t\t<nav>\n\t\t\t<ButtonGroup className={classes.pages}>\n\t\t\t\t{pageNumbers.map(number => (\n\t\t\t\t\t//renderizar os botões utilizando o vetor \n\t\t\t\t\t<Button key={number} onClick={() => paginate(number)}>\n\t\t\t\t\t\t{number}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</ButtonGroup>\n\t\t</nav>\n\t)\n}\n\nexport default Pagination\n","import React, { useState, useEffect } from 'react'\nimport Navbar from './components/Navbar'\nimport ComicCard from './components/ComicCard'\nimport Footer from './components/Footer'\nimport Pagination from './components/Pagination'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Search from '@material-ui/icons/Search'\nimport { createMuiTheme, MuiThemeProvider, makeStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport md5 from 'md5'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: { 500: '#EB1C24' },\n\t},\n})\n\nconst useStyles = makeStyles({\n\tgrid: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t},\n\tpagesContainerTop: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'center',\n\t\tmarginTop: 25,\n\t},\n\tpagesContainerBottom: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tmarginBottom: 50,\n\t},\n\tsearchContainer: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n\ttextField: {\n\t\ttextAlign: 'center',\n\t},\n})\n\n//dados necessários para a API\nconst ts = new Date().getTime()\nconst dateRange = '2000-01-01,2019-12-31'\nconst apiKey = '96e6742ab01695f8b7efbf20116ccefc'\nconst privateKey = '5decf7f546d7cdbea8c641bad4974e35dc650e8c'\nconst hash = md5(ts + apiKey + privateKey)\nconst limit = 100\nconst url = `https://gateway.marvel.com/v1/public/comics?limit=${limit}&apikey=${apiKey}&dateRange=${dateRange}&formatType=comic&hasDigitalIssue=true`\nconst config = {\n\tts,\n\tapiKey,\n\thash,\n}\n\nconst App = () => {\n\tconst [comics, setComics] = useState([])\n\tconst [loading, setLoading] = useState(false)\n\tconst [currentPage, setCurrentPage] = useState(1)\n\tconst [query, setQuery] = useState('')\n\tconst [comicsPerPage] = useState(10)\n\tconst classes = useStyles()\n\n\t//chamada da API para trazer os quadrinhos\n\tuseEffect(() => {\n\t\tconst getComics = async () => {\n\t\t\tsetLoading(true)\n\t\t\tconst res = await axios.get(url, config)\n\t\t\tsetComics(res.data.data.results)\n\t\t\tsetLoading(false)\n\t\t}\n\t\tgetComics()\n\t}, [])\n\n\t//guardar string do campo de busca\n\tconst handleSearch = event => setQuery(event.target.value)\n\n\t//filtrar quadrinhos baseado no input do usuario\n\tconst filteredComics = query => {\n\t\t//calcular a quantidade de páginas\n\t\tconst indexOfLastComic = currentPage * comicsPerPage\n\t\tconst indexOfFirstComic = indexOfLastComic - comicsPerPage\n\n\t\tlet currentComics = []\n\n\t\t//retornar todos os quadrinhos caso o input esteja vazio\n\t\tif (query === '') {\n\t\t\tcurrentComics = comics.slice(indexOfFirstComic, indexOfLastComic)\n\t\t\treturn currentComics\n\t\t}\n\n\t\t//loops para verificar se quadrinho contém presonagem buscado\n\t\tcomics.forEach(item => {\n\t\t\titem.characters.items.forEach(character => {\n\t\t\t\t//infelizmente, o usuário deve digitar o nome inteiro do personagem, ex: spider-man\n\t\t\t\tif (character.name.toLowerCase() === query.toLowerCase()) {\n\t\t\t\t\tcurrentComics.push(item)\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn currentComics\n\t}\n\n\t//função que é passada ao componente Paginate.js\n\tconst paginate = pageNumber => setCurrentPage(pageNumber)\n\n\t//extrair escritores de cada quadrinho\n\tconst getWriters = creators => {\n\t\tlet writers = []\n\t\tcreators.forEach(creator => {\n\t\t\tif (creator.role === 'writer') {\n\t\t\t\twriters.push(writers.length >= 1 ? ' & ' + creator.name : creator.name)\n\t\t\t}\n\t\t})\n\n\t\t//caso não exista nenhum escritor, retorna a primeira pessoa listada\n\t\tif (writers.length === 0) writers.push(creators[0].name)\n\t\treturn writers\n\t}\n\n\treturn (\n\t\t<MuiThemeProvider theme={theme}>\n\t\t\t<Navbar />\n\t\t\t{!loading ? (\n\t\t\t\t<div>\n\t\t\t\t\t<div className={classes.searchContainer}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='search'\n\t\t\t\t\t\t\tlabel='Filtrar por personagem'\n\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\tonChange={val => handleSearch(val)}\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t<Search />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!query ? (\n\t\t\t\t\t\t<div className={classes.pagesContainerTop}>\n\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\tclassName={classes.pageBtnsTop}\n\t\t\t\t\t\t\t\tcomicsPerPage={comicsPerPage}\n\t\t\t\t\t\t\t\ttotalComics={limit}\n\t\t\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<Grid container className={classes.grid}>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<CircularProgress style={{ marginTop: 50 }} />\n\t\t\t\t) : (\n\t\t\t\t\t//renderizar os qadrinhos retornados pela função de busca\n\t\t\t\t\tfilteredComics(query).map(comic => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid item xs={12} md={5} key={comic.id}>\n\t\t\t\t\t\t\t\t<ComicCard\n\t\t\t\t\t\t\t\t\ttitle={comic.title}\n\t\t\t\t\t\t\t\t\tcreator={getWriters(comic.creators.items)}\n\t\t\t\t\t\t\t\t\tcover={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\n\t\t\t\t\t\t\t\t\tdescription={comic.description}\n\t\t\t\t\t\t\t\t\tseries={comic.series.name}\n\t\t\t\t\t\t\t\t\tyear={comic.dates[0].date\n\t\t\t\t\t\t\t\t\t\t.split('')\n\t\t\t\t\t\t\t\t\t\t.splice(0, 4)\n\t\t\t\t\t\t\t\t\t\t.join('')}\n\t\t\t\t\t\t\t\t\tissue={comic.issueNumber}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t{!loading && !query ? (\n\t\t\t\t<div className={classes.pagesContainerBottom}>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tclassName={classes.pageBtnsBottom}\n\t\t\t\t\t\tcomicsPerPage={comicsPerPage}\n\t\t\t\t\t\ttotalComics={limit}\n\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{!loading && !query? <Footer /> : null}\n\t\t</MuiThemeProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}